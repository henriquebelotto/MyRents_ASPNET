@model MyRents.ViewModels.CustomerFormViewModel
@{
    // Changing the Title according to the condition
    if (Model.Customer == null)
    {
        // New customer form
        ViewBag.Title = "New Customer";
    }
    else
    {
        // Update customer form
        ViewBag.Title = "Update Customer";
    }

    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.title</h2>

<!--Helper method - ActionName: Save, Inside controller "Customers-->
<!-- Render the <form> tag only, this method returns a disposable object
If wrap this method inside a Using block, at the end of the block, 
the object will be disposed (a closing html tag) -->

@using (Html.BeginForm("Save", "Customers"))
{
    <!--Input for name -->
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @type = "text", @class = "form-control"})
    </div>
    <!--Input for Birthday -->
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthday)
        <!--You Can use HTML tag or use the property Display inside the model-->
        <!--<label for ="Birthday">Date of Birth:</label>-->
        <!--HTML5 requires the format to be yyyy-MM-dd to work-->
        @Html.TextBoxFor(m => m.Customer.Birthday, "{0:yyyy-MM-dd}",new { @type = "date", @class = "form-control"})
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId,
            new SelectList(Model.MembershipTypes, "Id", "Name"), 
            "Select Membership Type", new { @class = "form-control"})
    </div>

    <!--Checkbox for newsletter -->
    <div class="checkbox">
        @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter, new { @class = "mr-2" })
        @Html.LabelFor(m => m.Customer.IsSubscribedToNewsLetter)
    </div>

    <!--Adding the Id to the customer -->
    @Html.HiddenFor(m => m.Customer.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}

