<!--Model used in this view -->
@using MyRents.Models
@model MyRents.ViewModels.RandomMovieViewModel


@{
    ViewBag.Title = "Random";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@* Another way to pass data to the view - However, it's a old way *@
@*<h2>@( ((Movie) ViewData["Movie"]).Name)</h2>*@

@* 2nd way to pass data to the view is using ViewBag, however, it's
    not a good way, because if you change the name of the property here
    or in the controller, it won't work anymore*@

@*<h2>@ViewBag.Movie</h2>*@

@* Using C# to select a CSS class in the view *@
@{
    var className = Model.Customers.Count > 1 ? "popular" : null;
}

<h2>Using ViewBag @( ( (Movie)ViewBag.Movie).Name )</h2>

<h2 class="@className">@Model.Movie.Name</h2>

@if (Model.Customers.Count == 0)
{
    <p>No one has rented this movie yet.</p>
    // Can use the syntax <text></text> too, although it not an HTML tag,
    // but the razor view engine understand
}
else
{
    // Display a list of customers using Razor syntax

    <ul>
        @foreach (var customer in Model.Customers)
        {
            // Can write C# code or html inside this block
            <li>@customer.Name</li>

        }
    </ul>
}

@*
    
*@
