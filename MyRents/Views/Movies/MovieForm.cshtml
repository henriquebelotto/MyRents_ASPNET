@model MyRents.ViewModels.MovieFormViewModel
@{
    // Changing the Title according to the condition
    if (Model.Movie == null)
    {
        // New Movie form
        ViewBag.Title = "New Movie";
    }
    else
    {
        // Update Movie form
        ViewBag.Title = "Update Movie";
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("save", "Movies"))
{
    <!--Input for name -->
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new {@type="text", @class = "form-control" })
    </div>

    <!--Input for Release Date -->
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        <!--You Can use HTML tag or use the property Display inside the model-->
        <!--<label for ="Birthday">Date of Birth:</label>-->
        <!--HTML5 requires the format to be yyyy-MM-dd to work-->
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:yyyy-MM-dd}",new { @type = "date", @class = "form-control"})
    </div>

    <div class="form-group">
            @Html.LabelFor(m => m.Movie.MovieGenreId)
            @Html.DropDownListFor(m => m.Movie.MovieGenreId,
                new SelectList(Model.MovieGenres, "Id", "Name"),
                "Select Genre", new { @class = "form-control"})
        </div>
    
    <!--Input for Number in Stock -->
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumberInStock)
        @Html.TextBoxFor(m => m.Movie.NumberInStock, new {@type="number", @class = "form-control" })
    </div>

    <!--Adding the Id to the customer -->
    @Html.HiddenFor(m => m.Movie.Id)
    <button type="submit" class="btn btn-primary">Save</button>
}