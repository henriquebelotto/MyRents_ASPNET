@model MyRents.ViewModels.MovieFormViewModel
@{
    // Get the title from the MovieFormViewModel
    ViewBag.Title = Model.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("save", "Movies"))
{
    <!-- Validation Summary -->
    @Html.ValidationSummary()

    <!--Input for name -->
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.Name)
        @Html.TextBoxFor(m => m.Movie.Name, new { @type = "text", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.Name)
    </div>

    <!--Input for Release Date -->
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.ReleaseDate)
        <!--You Can use HTML tag or use the property Display inside the model-->
        <!--<label for ="Birthday">Date of Birth:</label>-->
        <!--HTML5 requires the format to be yyyy-MM-dd to work-->
        @Html.TextBoxFor(m => m.Movie.ReleaseDate, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Movie.MovieGenreId)
        @Html.DropDownListFor(m => m.Movie.MovieGenreId,
            new SelectList(Model.MovieGenres, "Id", "Name"),
            "Select Genre", new { @class = "form-control"})
        @Html.ValidationMessageFor(m => m.Movie.MovieGenreId)
    </div>

    <!--Input for Number in Stock -->
    <div class="form-group">
        @Html.LabelFor(m => m.Movie.NumberInStock)
        @Html.TextBoxFor(m => m.Movie.NumberInStock, new { @type = "number", @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Movie.NumberInStock)
    </div>

    <!--Adding the Id to the customer -->
    @Html.HiddenFor(m => m.Movie.Id)
    // This method creates a token (secret) and a cookie to prevent CSRF attack
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

<!-- Adding client-side validation -->
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}